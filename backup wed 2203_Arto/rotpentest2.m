clear x*;
fugiboard('CloseAll');
h = 0.01; % sampling time
han=fugiboard('Open', 'pendulum1');
han.WatchdogTimeout = 1;
fugiboard('SetParams', han);
fugiboard('Write', han, 0, 0, [0 0]);  % dummy write to sync interface board
fugiboard('Write', han, 4+1, 1, [0 0]);  % get version, reset position, activate relay
data = fugiboard('Read', han);
model = bitshift(data(1), -4);
version = bitand(data(1), 15);
fprintf('FPGA setup %d,  version %d', model, version);
fugiboard('Write', han, 0, 1, [0 0]);  % end reset
% make it move : 1, 3, 5, 7, 9 

pause(0.1); % give relay some time to act
steps = 10000;
xstat = zeros(1,steps);
xreltime = zeros(1,steps);
xpos1 = zeros(1,steps);
xpos2 = zeros(1,steps);
xcurr = zeros(1,steps);
xbeam = zeros(1,steps);
xpend = zeros(1,steps);
xdigin = zeros(1,steps);
tic;
bt = toc;
for X=1:steps
    if (X < 3000)
        fugiboard('Write', han, 0, 1, [0 0]);
    else
        fugiboard('Write', han, 0, 1, [0 0]);
    end
    data = fugiboard('Read', han);
    xstat(X) = data(1);
    xreltime(X) = data(2);
    xpos1(X) = data(3);
    xpos2(X) = data(4);
    xcurr(X) = data(5);
    xbeam(X) = data(6);
    xpend(X) = data(7);
    xdigin(X) = data(8);
    t = bt + (0.001 * X);
    %t = toc + 0.005;
    while (toc < t); end;
end
toc;

offset = [1.185896,1.195229];
slope = [1.208265,1.209528];


% [xbtest, xptest] = measure_angles(10000,han);
% figure(3); hold on; ylim([-2,5]); plot(1:1:600,xbtest);plot(1:1:600, xptest);title('measured angles'); ylabel('Beam, Pendulum'); legend({'Beam', 'Pendulum'})
hold off;
[xbtest, xptest] = calib(xbeam, xpend, offset, slope);
xbtest = unwrap(xbtest);
xptest = unwrap(xptest);
figure(4); hold on; plot(1:1:steps,xbtest);plot(1:1:steps, xptest);title('Calibrated angles'); ylabel('Beam, Pendulum'); legend({'Beam', 'Pendulum'})
hold off;





